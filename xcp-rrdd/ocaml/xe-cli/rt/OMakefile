OCAML_LIBS = ../../netdev/netdev
OCAMLINCLUDES = ../../netdev ./
OCAMLPACKS = unix str stdext xmlm xml-light2 log

.SUBDIRS:geneva

OCamlProgram(test_host, util test_host commands cliops parsers tests testlog networks)
OCamlProgram(gtclient, gtmessages gtcomms gtclient)
OCamlProgram(gtserver_linux, gtmessages gtcomms gtlinuxops gtserver_linux)
OCamlProgram(gtserver_win, gtmessages gtcomms gtwindowsops gtserver_win)
OCamlProgram(stress_test, stress_test util parsers commands testlog cliops)
OCamlProgram(xgetip, getip)


.PHONY: clean
clean:
	rm -f *.cmi *.cmx *.cmo *.a *.cma *.cmxa *.run *.opt *.annot *.o

.PHONY: install
install:
	rm -rf $(DIST)/cli-rt
	mkdir -p $(DIST)/cli-rt/gtserver
	install -m 755 -o root -g root test_host gtclient xgetip $(DIST)/cli-rt
	cp gtmessages.ml gtcomms.ml gtlinuxops.ml gtserver_linux.ml $(DIST)/cli-rt/gtserver/
	cp Makefile.gtserver $(DIST)/cli-rt/gtserver/Makefile
	# and this is for easier developer testing:
	rm -rf /tmp/cli-rt-domu
	mkdir -p /tmp/cli-rt-domu
	install -m 755 -o root -g root install.sh /tmp/cli-rt-domu
	mkdir -p /tmp/cli-rt-domu/root
	cp gtmessages.ml gtcomms.ml gtlinuxops.ml gtserver_linux.ml /tmp/cli-rt-domu/root
	install -m 755 -o root -g root install-debian-pv.sh install-debian-pv-inside.sh $(DIST)/staging/opt/xensource/debug
