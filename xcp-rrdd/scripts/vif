#!/bin/sh

# Copyright (C) 2008,2009 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; version 2.1 only. with the special
# exception on linking described in file LICENSE.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# CA-23900: Warning: when VIFs are added to windows guests with PV drivers the backend vif device is registered,
# unregistered and then registered again. This causes the udev event to fire twice and this script runs twice.
# Since the first invocation of the script races with the device unregistration, spurious errors are possible
# which will be logged but are safe to ignore since the second script invocation should complete the operation.
# Note that each script invocation is run synchronously from udev and so the scripts don't race with each other.

# Keep other-config/ keys in sync with device.ml:vif_udev_keys

BRCTL=/usr/sbin/brctl
IP=/sbin/ip

handle_promiscuous()
{
    local arg=$(xenstore-read "${PRIVATE}/other-config/promiscuous" 2>/dev/null)
    if [ $? -eq 0 -a -n "${arg}" ] ; then
        case "${arg}" in 
            true|on) echo 1 > /sys/class/net/${dev}/brport/promisc ;;
            *) echo 0 > /sys/class/net/${dev}/brport/promisc ;;
        esac
    fi
}

handle_ethtool()
{
    local opt=$1
    local arg=$(xenstore-read "${PRIVATE}/other-config/ethtool-${opt}" 2>/dev/null)
    if [ $? -eq 0 -a -n "${arg}" ] ; then
        case "${arg}" in
            true|on)   /sbin/ethtool -K "${dev}" "${opt}" on ;;
            false|off) /sbin/ethtool -K "${dev}" "${opt}" off ;;
            *) logger -t scripts-vif "Unknown ethtool argument ${opt}=${arg} on ${dev}/${VIFUUID}" ;;
        esac
    fi
}

handle_mtu()
{
    local mtu=$(xenstore-read "${PRIVATE}/MTU" 2>/dev/null)
    if [ $? -eq 0 -a -n "${mtu}" ]; then
	echo "${mtu}" > /sys/class/net/${dev}/mtu
    fi
}

add_to_bridge()
{
    local address=$(xenstore-read "${PRIVATE}/bridge-MAC")
    if [ $? -ne 0 -o -z "${address}" ]; then
	logger -t scripts-vif "Failed to read ${PRIVATE}/bridge-MAC from xenstore"
	exit 1
    fi
    local bridge=$(xenstore-read "${PRIVATE}/bridge")
    if [ $? -ne 0 -o -z "${bridge}" ]; then
	logger -t scripts-vif "Failed to read ${PRIVATE}/bridge from xenstore"
	exit 1
    fi
    logger -t scripts-vif "Adding ${dev} to ${bridge} with address ${address}"

    ${IP} link set "${dev}" down                        || logger -t scripts-vif "Failed to ip link set ${dev} down"
    ${IP} link set "${dev}" arp off                     || logger -t scripts-vif "Failed to ip link set ${dev} arp off"
    ${IP} link set "${dev}" multicast off               || logger -t scripts-vif "Failed to ip link set ${dev} multicast off"
    ${IP} link set "${dev}" address "${address}"        || logger -t scripts-vif "Failed to ip link set ${dev} address ${address}"
    ${IP} addr flush "${dev}"                           || logger -t scripts-vif "Failed to ip addr flush ${dev}"


    ${BRCTL} setfd "${bridge}" 0                        || logger -t scripts-vif "Failed to brctl setfd ${bridge} 0"
    ${BRCTL} addif "${bridge}" "${dev}"                 || logger -t scripts-vif "Failed to brctl addif ${bridge} ${dev}"
    ${IP} link set "${dev}" up                          || logger -t scripts-vif "Failed to ip link set ${dev} up"
}

type=$2

case ${type} in
    vif)
	DOMID=`echo ${XENBUS_PATH} | cut -f 3 -d '/'`
	DEVID=`echo ${XENBUS_PATH} | cut -f 4 -d '/'`
	dev=vif${DOMID}.${DEVID}
	;;
    tap)
	dev=$INTERFACE
	DOMID=`echo ${dev#tap} | cut -f 1 -d '.'`
	DEVID=`echo ${dev#tap} | cut -f 2 -d '.'`
	;;
    *)  
	logger -t scripts-vif "unknown interface type ${type}"
	exit 1
	;;
esac

XAPI=/xapi/${DOMID}/hotplug/vif/${DEVID}
HOTPLUG=/xapi/${DOMID}/hotplug/vif/${DEVID}
PRIVATE=/xapi/${DOMID}/private/vif/${DEVID}

echo Called as "$@" "$DOMID" "$DEVID" | logger -t scripts-vif
case "$1" in
online)
	if [ "${type}" = "vif" ] ; then
	    handle_ethtool rx
	    handle_ethtool tx
	    handle_ethtool sg
	    handle_ethtool tso
	    handle_ethtool ufo
	    handle_ethtool gso

	    handle_mtu
	    add_to_bridge
	    handle_promiscuous

	    xenstore-write "${HOTPLUG}/vif" "${dev}"
	    xenstore-write "${HOTPLUG}/hotplug" "online"

	    # xs-xen.pq.hq:91e986b8e49f netback-wait-for-hotplug
	    xenstore-write "/local/domain/0/backend/vif/${DOMID}/${DEVID}/hotplug-status" "connected"
	fi
	;;

add)
	if [ "${type}" = "tap" ] ; then
	    add_to_bridge
	fi
	;;

remove)
	if [ "${type}" = "vif" ] ;then
	    xenstore-rm "${HOTPLUG}/hotplug"
	fi
	logger -t scripts-vif "${dev} has been removed"
	;;
esac
