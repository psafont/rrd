(* -*- tuareg -*- *)
#require "unix"

let flags = function
| [] -> ""
| pkgs ->
  let cmd = "ocamlfind ocamlc -verbose" ^ (
    List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
  ) in
  let ic = Unix.open_process_in
    (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
  in
  let rec go ic acc =
    try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
  in
  go ic ""

(*
let coverage_rewriter ~full =
  let is_coverage = try Unix.getenv "COVERAGE" = "1" with Not_found -> false in
  match is_coverage, full with
  | true, true -> "(preprocess (pps (bisect_ppx -simple-cases)))"
  | true, _    -> "bisect_ppx -simple-cases"
  | _          -> ""
*)

let rewriters = ["ppx_deriving_rpc"]

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(executable
  ((name test_rrdd_monitor)
   (flags (:standard -bin-annot %s))
   (libraries (forkexec
               gzip
               http-svr
               io-page.unix
               oclock
               oUnit
               rpclib
               rpclib.unix
               rrdd_libs_internal
               stdext
               systemd
               threads
               uuid
               xapi-rrd
               xapi-rrd-transport
               xapi-rrd-unix
               xapi-rrdd
               xapi-xenops
               xcp
               xcp-inventory
               xcp.network
               xcp.rrd
               xcp.xen
               xen-gnt.unix))
  ))

(alias
 ((name    runtest)
  (deps    (test_rrdd_monitor.exe))
  (action  (run ${<}))))
|} (flags rewriters)
